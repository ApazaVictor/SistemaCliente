/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ClienteManagement;

import Entregable.Cliente;
import Entregable.ClienteCRUD;
import Database.OracleDBConnection;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class ClienteForm extends javax.swing.JPanel {
        private Connection connection;

    /**
     * Creates new form NewJPanel
     */
    public ClienteForm() {
        initComponents();
    JPanelCRUD.setModel(new DefaultTableModel(
    new Object[][] {},
    new String[]{"DNI", "Nombre", "Teléfonos", "Dirección"}
));

        // Inicializar la conexión
try {
    connection = OracleDBConnection.getConnection();
} catch (SQLException e) {
    JOptionPane.showMessageDialog(this, "Error al conectar a la base de datos.");
    e.printStackTrace();
}

        cargarDatosTabla(); // Cargar los datos iniciales en la tabla al iniciar el formulario
    }

    /**
     * Método para cargar los datos desde la base de datos y actualizar la tabla
     */
private void cargarDatosTabla() {
    try {
        DefaultTableModel model = (DefaultTableModel) JPanelCRUD.getModel();
        model.setRowCount(0); // Limpiar la tabla

        // Obtener los clientes de la base de datos y agregarlos a la tabla
        List<Cliente> clientes = ClienteCRUD.listarClientes(connection);
        for (Cliente cliente : clientes) {
            model.addRow(new Object[]{
                cliente.getDni(),
                cliente.getNombre(),
                cliente.getTelefonos(),
                cliente.getDireccion()
            });
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al cargar los datos de la tabla: " + e.getMessage());
    }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDni = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtTelefonos = new javax.swing.JTextField();
        txtDireccion = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jButtonGuardar = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        JPanelCRUD = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setText("FORMULARIO CLIENTE");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, 210, -1));

        jLabel2.setText("DNI");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        jLabel3.setText("Nombre");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 220, -1, -1));

        jLabel4.setText("Teléfonos");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 310, -1, -1));

        jLabel5.setText("Dirección");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 410, 60, -1));

        txtDni.setBorder(null);
        txtDni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDniActionPerformed(evt);
            }
        });
        jPanel1.add(txtDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 140, 240, 20));

        txtNombre.setBorder(null);
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 250, 240, 20));

        txtTelefonos.setBorder(null);
        jPanel1.add(txtTelefonos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 350, 240, 20));

        txtDireccion.setBorder(null);
        jPanel1.add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 440, 240, 20));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 240, 10));

        jSeparator2.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 240, 10));

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 240, -1));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));
        jPanel1.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 370, 240, 10));

        jButtonGuardar.setBackground(new java.awt.Color(153, 255, 102));
        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 480, -1, -1));

        jButtonLimpiar.setBackground(new java.awt.Color(204, 204, 204));
        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, -1, -1));

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 490, -1, -1));

        jButtonEliminar.setBackground(new java.awt.Color(255, 51, 51));
        jButtonEliminar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 490, -1, -1));

        JPanelCRUD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        JPanelCRUD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JPanelCRUDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JPanelCRUD);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 130, -1, 340));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
    // Obtener los datos de los campos de texto
    String dni = txtDni.getText();
    String nombre = txtNombre.getText();
    String telefonos = txtTelefonos.getText();
    String direccion = txtDireccion.getText();

    if (dni.isEmpty() || nombre.isEmpty() || telefonos.isEmpty() || direccion.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios.");
        return;
    }

    try {
        ClienteCRUD.agregarCliente(connection, dni, nombre, telefonos, direccion);
        JOptionPane.showMessageDialog(null, "Cliente guardado exitosamente.");
        cargarDatosTabla(); // Actualizar la tabla después de guardar
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al guardar el cliente: " + e.getMessage());
    }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
     // Limpiar los campos del formulario
    txtDni.setText("");
    txtNombre.setText("");
    txtTelefonos.setText("");
    txtDireccion.setText("");
    }//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed
    // Obtener los datos de los campos de texto
    String dni = txtDni.getText();
    String nombre = txtNombre.getText();
    String telefonos = txtTelefonos.getText();
    String direccion = txtDireccion.getText();

    if (dni.isEmpty() || nombre.isEmpty() || telefonos.isEmpty() || direccion.isEmpty()) {
        JOptionPane.showMessageDialog(null, "Todos los campos son obligatorios para actualizar.");
        return;
    }

    try {
        ClienteCRUD.modificarCliente(connection, dni, nombre, telefonos, direccion);
        JOptionPane.showMessageDialog(null, "Cliente actualizado exitosamente.");
        cargarDatosTabla(); // Actualizar la tabla después de actualizar
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al actualizar el cliente: " + e.getMessage());
    }
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
    // Obtener el DNI del campo de texto
    String dni = txtDni.getText();

    if (dni.isEmpty()) {
        JOptionPane.showMessageDialog(null, "El DNI es obligatorio para eliminar un cliente.");
        return;
    }

    try {
        ClienteCRUD.eliminarCliente(connection, dni);
        JOptionPane.showMessageDialog(null, "Cliente eliminado exitosamente.");
        cargarDatosTabla(); // Actualizar la tabla después de eliminar
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(null, "Error al eliminar el cliente: " + e.getMessage());
    }
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void txtDniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDniActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDniActionPerformed

    private void JPanelCRUDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JPanelCRUDMouseClicked
    // Obtener el índice de la fila seleccionada
    int row = JPanelCRUD.getSelectedRow();

    // Comprobar si se ha seleccionado una fila
    if (row != -1) {
        // Obtener los valores de la fila seleccionada
        String dni = JPanelCRUD.getValueAt(row, 0).toString();
        String nombre = JPanelCRUD.getValueAt(row, 1).toString();
        String telefonos = JPanelCRUD.getValueAt(row, 2).toString();
        String direccion = JPanelCRUD.getValueAt(row, 3).toString();

        // Cargar los valores en los campos de texto
        txtDni.setText(dni);
        txtNombre.setText(nombre);
        txtTelefonos.setText(telefonos);
        txtDireccion.setText(direccion);
    }
    }//GEN-LAST:event_JPanelCRUDMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JPanelCRUD;
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtDni;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtTelefonos;
    // End of variables declaration//GEN-END:variables
}
